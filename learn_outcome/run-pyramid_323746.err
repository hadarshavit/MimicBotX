/home/s3092593/.local/lib/python3.9/site-packages/torch/nn/modules/loss.py:529: UserWarning: Using a target size (torch.Size([512])) that is different to the input size (torch.Size([512, 8116])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  return F.mse_loss(input, target, reduction=self.reduction)
Traceback (most recent call last):
  File "/home/s3092593/MimicBotX/learn_outcome/learn_bc.py", line 168, in <module>
    main(activation=timm.models.layers.activations.GELU, block=network.NEXcepTionBlock, optimizer='fusedlamb', lr=2.5 * 1e-3,
  File "/home/s3092593/MimicBotX/learn_outcome/learn_bc.py", line 115, in main
    loss = criterion(outputs, labels)
  File "/home/s3092593/.local/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/s3092593/.local/lib/python3.9/site-packages/torch/nn/modules/loss.py", line 529, in forward
    return F.mse_loss(input, target, reduction=self.reduction)
  File "/home/s3092593/.local/lib/python3.9/site-packages/torch/nn/functional.py", line 3261, in mse_loss
    expanded_input, expanded_target = torch.broadcast_tensors(input, target)
  File "/home/s3092593/.local/lib/python3.9/site-packages/torch/functional.py", line 75, in broadcast_tensors
    return _VF.broadcast_tensors(tensors)  # type: ignore[attr-defined]
RuntimeError: The size of tensor a (8116) must match the size of tensor b (512) at non-singleton dimension 1
